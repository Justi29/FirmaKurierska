@page "/client/create"
@inject IClientService _clientService
@inject NavigationManager _navigationManager

<PageTitle>Create client</PageTitle>
<h1>Create client</h1>

<EditForm Model="@_client" OnValidSubmit="@CreateClient">
    <FluentValidationValidator @ref="_fluentValidationValidator" DisableAssemblyScanning="@true" />
    <ValidationSummary />
    <div class="form-group">
        <label>Name: </label>
        <InputText @bind-Value="@_client.Name" class="form-control" />
        <ValidationMessage For="@(() => _client.Name)" />
    </div>
    <div class="form-group">
        <label>Surname: </label>
        <InputText @bind-Value="@_client.Surname" class="form-control" />
        <ValidationMessage For="@(() => _client.Surname)" />
    </div>
    <div class="form-group">
        <label>PhoneNumber: </label>
        <InputText @bind-Value="@_client.PhoneNumber" class="form-control" />
        <ValidationMessage For="@(() => _client.PhoneNumber)" />
    </div>
    <div class="form-group">
        <label>Email: </label>
        <InputText @bind-Value="@_client.Email" class="form-control" />
        <ValidationMessage For="@(() => _client.Email)" />
    </div>
    <div class="form-group">
        <label>IsCompany: </label>
        <InputCheckbox @bind-Value="@_client.IsCompany" class="form-check-input" />
        <ValidationMessage For="@(() => _client.IsCompany)" />
    </div>
    <div class="form-group">
        <label>NIP: </label>
        <InputText @bind-Value="@_client.NIP" class="form-control" />
        <ValidationMessage For="@(() => _client.NIP)" />
    </div>
    <br />
    <div class="form-group">
        <button class="btn btn-primary" type="submit"> <span class="oi oi-plus"></span> Create </button>
        <button @onclick="BackToList" class="btn btn-secondary" type="button">
            <span class="oi oi-media-skip-backward" />
            Back To List
        </button>
    </div>
</EditForm>

@code {
    private FluentValidationValidator? _fluentValidationValidator;
    private ClientDto _client = new ClientDto();

    private void CreateClient()
    {
        var newId = _clientService.Create(_client);
        _navigationManager.NavigateTo($"/client");
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/client");
    }
}
