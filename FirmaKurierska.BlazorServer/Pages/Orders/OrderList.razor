@page "/order"
@inject IOrderService _orderService
@inject IJSRuntime _js
@inject NavigationManager _navigationManager
<PageTitle>Order list</PageTitle>
<h1>Order list</h1>

<div>
    <div>
        <a href="order/create" class="btn bg-primary"><span class="oi oi-plus" aria-hidden="true"></span> Create new order </a>
    </div>
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Status</th>
                <th>Size</th>
                <th>TotalCost</th>
                <th>PickupLocation</th>
                <th>Destination</th>
                <th>ShippingDate</th>
                <th>PickupDate</th>
                <th>DeliveryDate</th>
                <th>ClientId</th>
                <th>CourierId</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var o in _orderList)
            {
                <tr>
                    <td>@o.Id</td>
                    <td>@o.Status</td>
                    <td>@o.Size</td>
                    <td>@o.TotalCost</td>
                    <td>@o.PickupLocation.Street, @o.PickupLocation.City, @o.PickupLocation.PostCode, @o.PickupLocation.Country</td>
                    <td>@o.Destination.Street, @o.Destination.City, @o.Destination.PostCode, @o.Destination.Country</td>
                    <td>@o.ShippingDate.ToString("yyyy-MM-dd")</td>
                    <td>@(o.PickupDate.HasValue ? o.PickupDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                    <td>@(o.DeliveryDate.HasValue ? o.DeliveryDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                    <td>@o.ClientId</td>
                    <td>@o.CourierId</td>
                    <td>
                        <button class="btn bg-danger" @onclick="()=>DeleteOrder(o.Id)"> Delete </button>
                    </td>
                    <button class="btn bg-warning" @onclick="@(()=>EditOrder(@o.Id))">
                        <span class="oi oi-pencil" aria-hidden="true"></span>
                        Edit
                    </button>

                </tr>
            }
        </tbody>
    </table>
</div>
@code {
    private List<OrderDto> _orderList = null;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _orderList = _orderService.GetAll();
    }
    protected async Task DeleteOrder(int id)
    {
        var order = _orderList.First(q => q.Id == id);
        var confirm = await _js.InvokeAsync<bool>("confirm", $"Are You Sure You Want To Delete order {order.Id}?");
        if (confirm)
        {
            _orderService.Delete(id);
            OnInitialized();
        }
    }
    protected void EditOrder(int id)
    {
        _navigationManager.NavigateTo($"order/edit/{id}");
    }
} 